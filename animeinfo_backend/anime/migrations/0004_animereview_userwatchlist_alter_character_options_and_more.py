# Generated by Django 5.2.4 on 2025-08-04 07:55

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('anime', '0003_anime_video_url'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnimeReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')])),
                ('title', models.CharField(max_length=200)),
                ('review_text', models.TextField()),
                ('story_rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')])),
                ('animation_rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')])),
                ('character_rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')])),
                ('music_rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')])),
                ('is_spoiler', models.BooleanField(default=False)),
                ('helpful_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserWatchlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('watching', 'Currently Watching'), ('completed', 'Completed'), ('on_hold', 'On Hold'), ('dropped', 'Dropped'), ('plan_to_watch', 'Plan to Watch')], max_length=20)),
                ('episodes_watched', models.IntegerField(default=0)),
                ('personal_rating', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')], null=True)),
                ('is_favorite', models.BooleanField(default=False)),
                ('private_notes', models.TextField(blank=True, null=True)),
                ('added_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AlterModelOptions(
            name='character',
            options={'ordering': ['-importance_level', 'name']},
        ),
        migrations.AlterModelOptions(
            name='episode',
            options={'ordering': ['season_number', 'episode_number']},
        ),
        migrations.AlterUniqueTogether(
            name='episode',
            unique_together=set(),
        ),
        migrations.AddField(
            model_name='anime',
            name='age_rating',
            field=models.CharField(choices=[('G', 'General Audiences'), ('PG', 'Parental Guidance'), ('PG13', 'PG-13'), ('R', 'Restricted'), ('NC17', 'Adults Only')], default='PG13', max_length=10),
        ),
        migrations.AddField(
            model_name='anime',
            name='alternative_titles',
            field=models.TextField(blank=True, help_text='Alternative titles separated by commas', null=True),
        ),
        migrations.AddField(
            model_name='anime',
            name='anilist_url',
            field=models.URLField(blank=True, help_text='AniList page URL', null=True),
        ),
        migrations.AddField(
            model_name='anime',
            name='content_warnings',
            field=models.TextField(blank=True, help_text='Content warnings separated by commas', null=True),
        ),
        migrations.AddField(
            model_name='anime',
            name='director',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='anime',
            name='end_date',
            field=models.DateField(blank=True, help_text='Last episode air date', null=True),
        ),
        migrations.AddField(
            model_name='anime',
            name='ending_theme_url',
            field=models.URLField(blank=True, help_text='Ending theme video URL', null=True),
        ),
        migrations.AddField(
            model_name='anime',
            name='episode_duration',
            field=models.IntegerField(default=24, help_text='Average episode duration in minutes'),
        ),
        migrations.AddField(
            model_name='anime',
            name='episodes_per_season',
            field=models.IntegerField(default=12, validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='anime',
            name='favorite_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='anime',
            name='is_award_winner',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='anime',
            name='is_completed_series',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='anime',
            name='is_editor_choice',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='anime',
            name='is_trending',
            field=models.BooleanField(default=False, help_text='Show in trending section'),
        ),
        migrations.AddField(
            model_name='anime',
            name='logo_image',
            field=models.ImageField(blank=True, help_text='Anime logo/title image', null=True, upload_to='anime_logos/'),
        ),
        migrations.AddField(
            model_name='anime',
            name='mal_score',
            field=models.DecimalField(blank=True, decimal_places=1, default=0.0, help_text='MyAnimeList score', max_digits=3, null=True),
        ),
        migrations.AddField(
            model_name='anime',
            name='music_composer',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='anime',
            name='myanimelist_url',
            field=models.URLField(blank=True, help_text='MyAnimeList page URL', null=True),
        ),
        migrations.AddField(
            model_name='anime',
            name='next_episode_date',
            field=models.DateField(blank=True, help_text='Next episode air date', null=True),
        ),
        migrations.AddField(
            model_name='anime',
            name='official_website',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='anime',
            name='opening_theme_url',
            field=models.URLField(blank=True, help_text='Opening theme video URL', null=True),
        ),
        migrations.AddField(
            model_name='anime',
            name='popularity_rank',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='anime',
            name='producer',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='anime',
            name='screenshot1',
            field=models.ImageField(blank=True, null=True, upload_to='anime_screenshots/'),
        ),
        migrations.AddField(
            model_name='anime',
            name='screenshot2',
            field=models.ImageField(blank=True, null=True, upload_to='anime_screenshots/'),
        ),
        migrations.AddField(
            model_name='anime',
            name='screenshot3',
            field=models.ImageField(blank=True, null=True, upload_to='anime_screenshots/'),
        ),
        migrations.AddField(
            model_name='anime',
            name='season',
            field=models.CharField(blank=True, choices=[('winter', 'Winter'), ('spring', 'Spring'), ('summer', 'Summer'), ('fall', 'Fall')], max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='anime',
            name='secondary_genres',
            field=models.CharField(blank=True, help_text='Additional genres separated by commas', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='anime',
            name='seo_description',
            field=models.CharField(blank=True, max_length=160, null=True),
        ),
        migrations.AddField(
            model_name='anime',
            name='seo_title',
            field=models.CharField(blank=True, max_length=60, null=True),
        ),
        migrations.AddField(
            model_name='anime',
            name='short_description',
            field=models.CharField(blank=True, help_text='Brief description for cards and previews', max_length=300, null=True),
        ),
        migrations.AddField(
            model_name='anime',
            name='slug',
            field=models.SlugField(blank=True, max_length=200, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='anime',
            name='source',
            field=models.CharField(choices=[('manga', 'Manga'), ('light_novel', 'Light Novel'), ('visual_novel', 'Visual Novel'), ('game', 'Video Game'), ('original', 'Original'), ('web_manga', 'Web Manga'), ('novel', 'Novel'), ('other', 'Other')], default='manga', max_length=20),
        ),
        migrations.AddField(
            model_name='anime',
            name='start_date',
            field=models.DateField(blank=True, help_text='First episode air date', null=True),
        ),
        migrations.AddField(
            model_name='anime',
            name='tags',
            field=models.TextField(blank=True, help_text='Search tags separated by commas', null=True),
        ),
        migrations.AddField(
            model_name='anime',
            name='total_seasons',
            field=models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='anime',
            name='trending_rank',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='anime',
            name='user_ratings_count',
            field=models.IntegerField(default=0, help_text='Number of user ratings'),
        ),
        migrations.AddField(
            model_name='anime',
            name='view_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='character',
            name='abilities',
            field=models.TextField(blank=True, help_text='Special abilities/powers', null=True),
        ),
        migrations.AddField(
            model_name='character',
            name='age',
            field=models.CharField(blank=True, help_text='e.g., 16, Unknown, 500+', max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='character',
            name='alternative_names',
            field=models.TextField(blank=True, help_text='Alternative names separated by commas', null=True),
        ),
        migrations.AddField(
            model_name='character',
            name='birthday',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='character',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default='Enter'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='character',
            name='fan_favorite',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='character',
            name='height',
            field=models.CharField(blank=True, help_text='e.g., 170cm, Unknown', max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='character',
            name='importance_level',
            field=models.IntegerField(default=1, help_text='1=Minor, 10=Protagonist', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)]),
        ),
        migrations.AddField(
            model_name='character',
            name='japanese_name',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='character',
            name='personality_traits',
            field=models.TextField(blank=True, help_text='Personality traits separated by commas', null=True),
        ),
        migrations.AddField(
            model_name='character',
            name='popularity_score',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='character',
            name='role',
            field=models.CharField(choices=[('main', 'Main Character'), ('supporting', 'Supporting Character'), ('antagonist', 'Antagonist'), ('comic_relief', 'Comic Relief'), ('mentor', 'Mentor'), ('love_interest', 'Love Interest')], default='supporting', max_length=20),
        ),
        migrations.AddField(
            model_name='character',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='character',
            name='voice_actor_english',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='character',
            name='voice_actor_japanese',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='episode',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default='Enter'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='episode',
            name='episode_rating',
            field=models.DecimalField(decimal_places=1, default=0.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)]),
        ),
        migrations.AddField(
            model_name='episode',
            name='is_filler',
            field=models.BooleanField(default=False, help_text='Is this a filler episode?'),
        ),
        migrations.AddField(
            model_name='episode',
            name='is_recap',
            field=models.BooleanField(default=False, help_text='Is this a recap episode?'),
        ),
        migrations.AddField(
            model_name='episode',
            name='is_special',
            field=models.BooleanField(default=False, help_text='Is this a special episode?'),
        ),
        migrations.AddField(
            model_name='episode',
            name='japanese_title',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='episode',
            name='like_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='episode',
            name='preview_url',
            field=models.URLField(blank=True, help_text='Episode preview/trailer URL', null=True),
        ),
        migrations.AddField(
            model_name='episode',
            name='season_number',
            field=models.IntegerField(default=1),
        ),
        migrations.AddField(
            model_name='episode',
            name='thumbnail',
            field=models.ImageField(blank=True, null=True, upload_to='episode_thumbnails/'),
        ),
        migrations.AddField(
            model_name='episode',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='episode',
            name='view_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='anime',
            name='current_episode',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='anime',
            name='genre',
            field=models.CharField(choices=[('shounen', 'Shounen'), ('seinen', 'Seinen'), ('shoujo', 'Shoujo'), ('fantasy', 'Fantasy'), ('mecha', 'Mecha'), ('horror', 'Horror'), ('romance', 'Romance'), ('action', 'Action'), ('comedy', 'Comedy'), ('drama', 'Drama'), ('slice_of_life', 'Slice of Life'), ('supernatural', 'Supernatural'), ('thriller', 'Thriller'), ('mystery', 'Mystery'), ('sports', 'Sports'), ('music', 'Music'), ('school', 'School')], max_length=20),
        ),
        migrations.AlterField(
            model_name='anime',
            name='rating',
            field=models.DecimalField(decimal_places=1, default=0.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)]),
        ),
        migrations.AlterField(
            model_name='anime',
            name='release_year',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(1960), django.core.validators.MaxValueValidator(2030)]),
        ),
        migrations.AlterField(
            model_name='anime',
            name='status',
            field=models.CharField(choices=[('ongoing', 'Ongoing'), ('completed', 'Completed'), ('upcoming', 'Upcoming'), ('hiatus', 'On Hiatus'), ('cancelled', 'Cancelled')], default='ongoing', max_length=20),
        ),
        migrations.AlterField(
            model_name='anime',
            name='timeline_position',
            field=models.IntegerField(default=0, help_text='Position in timeline (1960-2030)'),
        ),
        migrations.AlterField(
            model_name='anime',
            name='total_episodes',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='anime',
            name='trailer_url',
            field=models.URLField(blank=True, help_text='YouTube/Vimeo trailer URL', null=True),
        ),
        migrations.AlterUniqueTogether(
            name='episode',
            unique_together={('anime', 'season_number', 'episode_number')},
        ),
        migrations.AddIndex(
            model_name='anime',
            index=models.Index(fields=['genre', 'status'], name='anime_anime_genre_7be17c_idx'),
        ),
        migrations.AddIndex(
            model_name='anime',
            index=models.Index(fields=['rating', '-created_at'], name='anime_anime_rating_49fff4_idx'),
        ),
        migrations.AddIndex(
            model_name='anime',
            index=models.Index(fields=['is_published', 'is_featured'], name='anime_anime_is_publ_9a412e_idx'),
        ),
        migrations.AddIndex(
            model_name='character',
            index=models.Index(fields=['anime', 'is_main_character'], name='anime_chara_anime_i_6ee878_idx'),
        ),
        migrations.AddIndex(
            model_name='character',
            index=models.Index(fields=['role', 'importance_level'], name='anime_chara_role_96cd82_idx'),
        ),
        migrations.AddIndex(
            model_name='episode',
            index=models.Index(fields=['anime', 'season_number', 'episode_number'], name='anime_episo_anime_i_ad8389_idx'),
        ),
        migrations.AddIndex(
            model_name='episode',
            index=models.Index(fields=['air_date'], name='anime_episo_air_dat_d25bbe_idx'),
        ),
        migrations.AddField(
            model_name='animereview',
            name='anime',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='anime.anime'),
        ),
        migrations.AddField(
            model_name='animereview',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userwatchlist',
            name='anime',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='anime.anime'),
        ),
        migrations.AddField(
            model_name='userwatchlist',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='animereview',
            unique_together={('anime', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='userwatchlist',
            unique_together={('user', 'anime')},
        ),
    ]
